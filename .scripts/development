#!/bin/bash

# turns my dev env on or off
# turns on Apache and various homebrew services
#
### Usage:
#
# ./development $1
#
# $1:
#  - (empty) Reports if dev environment is running
#  - 'on' Turns on dev environment
#  - 'off' Turns off dev environment

source ~/.bash/colors.sh

development_status=~/.development_on
homebrew_services=( 'redis' 'php70' 'httpd24' 'mysql@5.6' )

# echos a nice color coded message
#
# $1 'start'|'stop'
# $2 service name
function service_msg() {
	if [ "$1" == "start" ]; then
		echo -e "${GREEN}Starting${LIGHT_GRAY} $2"
		echo -ne "${RESET}"
	else
		echo -e "${RED}Stopping${LIGHT_GRAY} $2"
		echo -ne "${RESET}"
	fi
}

# starts/stops a homebrew service
#
# $1 'start'|'stop'
# $2 homebrew service name
function homebrew_service() {
	service_plist_path="$( brew --prefix $2)"
	service_plist="$( find ${service_plist_path}/ -name \*.plist )"
	# thanks: http://stackoverflow.com/questions/12487424/uppercase-first-character-in-a-variable-with-bash
	service_name="$(tr '[:lower:]' '[:upper:]' <<< ${2:0:1})${2:1}"
	if [ -f "$service_plist" ]; then
		load="load"
		if [ "$1" == "stop" ]; then
			load="unload"
		fi
		service_msg "$1" "$service_name"
		launchctl $load $service_plist
	else
		echo "$service_name is not a homebrew service"
	fi
}

# iterates through $homebrew_services and starts or stops them
#
# $1 'start'|'stop'
function trigger_homebrew_services() {
	for service in "${homebrew_services[@]}"; do
		sudo=""
		if [ "$service" == "httpd24" ]; then
			sudo="sudo"
		fi
		$sudo brew services "$1" "$service"
	done
}

if [ "$1" == "on" ]; then
	echo -e "${WHITE}Starting development services"
	echo -ne "${RESET}"
	trigger_homebrew_services 'start'
	touch "${development_status}"
elif [ "$1" == "off" ]; then
	echo -e "${WHITE}Stopping development services"
	echo -ne "${RESET}"
	trigger_homebrew_services 'stop'
	rm "${development_status}"
fi

if [ ! -f "${development_status}" ]; then
	echo -e "${LIGHT_GRAY}Development services are ${RED}off"
else
	echo -e "${LIGHT_GRAY}Development services are ${GREEN}on"
fi

echo -ne "${RESET}"
